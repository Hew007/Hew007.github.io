const t=JSON.parse('{"key":"v-170c2158","path":"/posts/tech-article/how-use-useContext-and-reason.html","title":"useContext的使用规则及原理浅析","lang":"zh-CN","frontmatter":{"title":"useContext的使用规则及原理浅析","date":"2022-01-23T00:00:00.000Z","category":["技术","React"],"tag":["react","hooks","useContext","原理"],"description":"文章为去年所写，最近翻到笔记，为了熟悉一下，也为了方便看，将其放在博客中 Context 什么是Context 想象一下，我们有一个 React 应用，其中包含一个父组件，其中包含许多级别的子组件，以及子组件的子组件。 现在，我们要将数据从最上面的组件一直传递到最后一个子组件。在 React 中，数据通常通过props从一个组件自上而下传递到另一个组件。此时我们通过每个组件，通过它们的 props 传递该数据，直到到达最后一个子组件。如果这样的嵌套树形结构有5层或10层，那么将是灾难式的开发维护体验，并且容易出错。如果能不经过中间的节点直接到达需要的地方就可以避免这种问题，这时 Context api 就是来解决这个问题的。 Context API 允许我们轻松访问组件树中不同层级的数据，而不必通过 props 向下传递数据。","head":[["meta",{"property":"og:url","content":"https://hnhew.gitee.io/posts/tech-article/how-use-useContext-and-reason.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"useContext的使用规则及原理浅析"}],["meta",{"property":"og:description","content":"文章为去年所写，最近翻到笔记，为了熟悉一下，也为了方便看，将其放在博客中 Context 什么是Context 想象一下，我们有一个 React 应用，其中包含一个父组件，其中包含许多级别的子组件，以及子组件的子组件。 现在，我们要将数据从最上面的组件一直传递到最后一个子组件。在 React 中，数据通常通过props从一个组件自上而下传递到另一个组件。此时我们通过每个组件，通过它们的 props 传递该数据，直到到达最后一个子组件。如果这样的嵌套树形结构有5层或10层，那么将是灾难式的开发维护体验，并且容易出错。如果能不经过中间的节点直接到达需要的地方就可以避免这种问题，这时 Context api 就是来解决这个问题的。 Context API 允许我们轻松访问组件树中不同层级的数据，而不必通过 props 向下传递数据。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-14T14:25:04.000Z"}],["meta",{"property":"article:author","content":"Hew.iShare"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"hooks"}],["meta",{"property":"article:tag","content":"useContext"}],["meta",{"property":"article:tag","content":"原理"}],["meta",{"property":"article:published_time","content":"2022-01-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-14T14:25:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"useContext的使用规则及原理浅析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-14T14:25:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hew.iShare\\",\\"url\\":\\"https://hnhew.gitee.io/blog\\"}]}"]]},"headers":[{"level":2,"title":"Context","slug":"context","link":"#context","children":[{"level":3,"title":"什么是Context","slug":"什么是context","link":"#什么是context","children":[]},{"level":3,"title":"useContext","slug":"usecontext","link":"#usecontext","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]}]},{"level":2,"title":"Hook 规则","slug":"hook-规则","link":"#hook-规则","children":[{"level":3,"title":"只在最顶层使用 Hook","slug":"只在最顶层使用-hook","link":"#只在最顶层使用-hook","children":[]},{"level":3,"title":"只在 React 函数中调用 Hook","slug":"只在-react-函数中调用-hook","link":"#只在-react-函数中调用-hook","children":[]},{"level":3,"title":"代码约束","slug":"代码约束","link":"#代码约束","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1684073589000,"updatedTime":1684074304000,"contributors":[{"name":"Hew","email":"hewei_hn@foxmail.com","commits":2}]},"readingTime":{"minutes":8.96,"words":2687},"filePathRelative":"posts/tech-article/how-use-useContext-and-reason.md","localizedDate":"2022年1月23日","excerpt":"<blockquote>\\n<p>文章为去年所写，最近翻到笔记，为了熟悉一下，也为了方便看，将其放在博客中</p>\\n</blockquote>\\n<h2> Context</h2>\\n<h3> 什么是Context</h3>\\n<p>想象一下，我们有一个 React 应用，其中包含一个父组件，其中包含许多级别的子组件，以及子组件的子组件。\\n现在，我们要将数据从最上面的组件一直传递到最后一个子组件。在 React 中，数据通常通过props从一个组件自上而下传递到另一个组件。此时我们通过每个组件，通过它们的 props 传递该数据，直到到达最后一个子组件。如果这样的嵌套树形结构有5层或10层，那么将是灾难式的开发维护体验，并且容易出错。如果能不经过中间的节点直接到达需要的地方就可以避免这种问题，这时 Context api 就是来解决这个问题的。\\nContext API 允许我们轻松访问组件树中不同层级的数据，而不必通过 props 向下传递数据。</p>","autoDesc":true}');export{t as data};
