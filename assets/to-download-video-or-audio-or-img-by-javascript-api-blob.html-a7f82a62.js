import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as o,a as c,b as n,d as s,e as l,w as i,f as u}from"./app-d75e961b.js";const d={},r=n("h3",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),s(" 前言")],-1),k=n("p",null,"在网页中，下载文件我们一般都是使用a标签指定其download属性来下载文件，比如下载excel，pdf等类型的文件，是没有任何问题的。但是，当文件链接为图片、视频或者音频类型时，此时，download属性便失效了，此时，点击a标签对应的下载链接，浏览器便会打开此文件，进行播放或者展示。遇到此种情况该如何处理呢？",-1),m=n("h3",{id:"指定请求类型",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#指定请求类型","aria-hidden":"true"},"#"),s(" 指定请求类型")],-1),b=n("code",null,"responseType",-1),v=u(`<h3 id="转为对象url下载" tabindex="-1"><a class="header-anchor" href="#转为对象url下载" aria-hidden="true">#</a> 转为对象URL下载</h3><p>当我们拿到Blob对象，便可以利用<code>URL.createObjectURL</code>方法，将<code>BIob</code>对象转化为对象URL，此URL为指向源Blob对象的字符串，产生的URL通常像这样：<code>blob:http://localhost:8080/5b34ce1c-0c3c-4b4d-9cf2-d9f5c0800833</code>(这是本地服务生成结果)，我们可以看成是生成的一个唯一的标识，指向源对象。 然后，将此URL赋值到一个a标签上，指定download属性，即可通过click()触发下载，这样，浏览器就不会将其识别为可播放或的视频或者可以展示的图片进行处理了。</p><p>代码示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 使用axios请求示例</span>

axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/images/test.mp4&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;blob&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// 打印为Blob对象</span>
    <span class="token comment">// 下载此二进制文件</span>
    <span class="token function">downloadFileByBlob</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> test<span class="token punctuation">.</span>mp4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * blob文件xls下载
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">blob</span> 二进制blob对象
* <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">fileName</span> 导出的文件名
*/</span>
<span class="token function">downloadFileByBlob</span><span class="token punctuation">(</span><span class="token parameter">blob<span class="token punctuation">,</span> fileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     a<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span>
     a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
     a<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
     document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
     a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// 清除数据</span>
     document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
     a <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
     <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function h(f,B){const a=e("RouterLink");return p(),o("div",null,[r,k,c(" more "),m,n("p",null,[s("我们知道，使用ajax请求，我们可以指定"),b,s("，来控制返回数据类型。当我们请求图片、视频等这类文件时，服务的返回的是对应的文件流，此时，我们只需要通过指定请求的responseType为Blob类型，服务器响应便会返回一个Blob类型的二进制对象。可参考另一篇文章："),l(a,{to:"/2020/05/%E6%8C%87%E5%AE%9AresponseType%E8%A7%A3%E5%86%B3%E5%88%A9%E7%94%A8Blob%E5%AF%B9%E8%B1%A1%E5%AF%BC%E5%87%BA%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.html"},{default:i(()=>[s("指定responseType解决利用Blob对象导出文件乱码问题")]),_:1}),s("。")]),v])}const E=t(d,[["render",h],["__file","to-download-video-or-audio-or-img-by-javascript-api-blob.html.vue"]]);export{E as default};
