const e=JSON.parse('{"key":"v-75c957c8","path":"/posts/tech-article/docker-gitlab-jenkins-CI-CD.html","title":"docker + gitlab + jenkins实现前端CICD自动化","lang":"zh-CN","frontmatter":{"title":"docker + gitlab + jenkins实现前端CICD自动化","date":"2020-07-12T19:46:10.000Z","category":["运维","技术"],"tag":["docker","jenkins","gitlab","前端自动化","CI,CD"],"description":"前言 在当前的项目工作中，由于还没有完全的实现整个前端自动化流程，导致许多劳动可能都是重复性的，但又不得不做，算是一个痛点。同时，自己也相对前端自动化方面有更深入的了解，俗话说，实践出真知。于是，便亲自购买服务器，安装配置相关环境，应用等，亲自实践了circle-ci、gitlab-ci和Jenkins这三种工具，来实现前端的自动化流程，今天主要分享利用jenkins对接gitlab，利用docker容器技术，实现前端项目的测试构建发布流程。","head":[["meta",{"property":"og:url","content":"https://blog.yunishare.cn/posts/tech-article/docker-gitlab-jenkins-CI-CD.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"docker + gitlab + jenkins实现前端CICD自动化"}],["meta",{"property":"og:description","content":"前言 在当前的项目工作中，由于还没有完全的实现整个前端自动化流程，导致许多劳动可能都是重复性的，但又不得不做，算是一个痛点。同时，自己也相对前端自动化方面有更深入的了解，俗话说，实践出真知。于是，便亲自购买服务器，安装配置相关环境，应用等，亲自实践了circle-ci、gitlab-ci和Jenkins这三种工具，来实现前端的自动化流程，今天主要分享利用jenkins对接gitlab，利用docker容器技术，实现前端项目的测试构建发布流程。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-05T13:23:09.000Z"}],["meta",{"property":"article:author","content":"Hew.iShare"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"jenkins"}],["meta",{"property":"article:tag","content":"gitlab"}],["meta",{"property":"article:tag","content":"前端自动化"}],["meta",{"property":"article:tag","content":"CI,CD"}],["meta",{"property":"article:published_time","content":"2020-07-12T19:46:10.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-05T13:23:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker + gitlab + jenkins实现前端CICD自动化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-07-12T19:46:10.000Z\\",\\"dateModified\\":\\"2023-04-05T13:23:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hew.iShare\\",\\"url\\":\\"https://blog.yunishare.cn/blog\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"主要步骤","slug":"主要步骤","link":"#主要步骤","children":[{"level":3,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":3,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]},{"level":3,"title":"配置访问密钥","slug":"配置访问密钥","link":"#配置访问密钥","children":[]},{"level":3,"title":"配置webhook，jenkins和git对接","slug":"配置webhook-jenkins和git对接","link":"#配置webhook-jenkins和git对接","children":[]},{"level":3,"title":"配置构建命令","slug":"配置构建命令","link":"#配置构建命令","children":[]},{"level":3,"title":"编写Dockfile文件","slug":"编写dockfile文件","link":"#编写dockfile文件","children":[]},{"level":3,"title":"配置jenkins脚本","slug":"配置jenkins脚本","link":"#配置jenkins脚本","children":[]}]}],"git":{"createdTime":1680700989000,"updatedTime":1680700989000,"contributors":[{"name":"Hew","email":"hewei_hn@foxmail.com","commits":1}]},"readingTime":{"minutes":8.4,"words":2520},"filePathRelative":"posts/tech-article/docker-gitlab-jenkins-CI-CD.md","localizedDate":"2020年7月12日","excerpt":"<h2> 前言</h2>\\n<p>在当前的项目工作中，由于还没有完全的实现整个前端自动化流程，导致许多劳动可能都是重复性的，但又不得不做，算是一个痛点。同时，自己也相对前端自动化方面有更深入的了解，俗话说，实践出真知。于是，便亲自购买服务器，安装配置相关环境，应用等，亲自实践了circle-ci、gitlab-ci和Jenkins这三种工具，来实现前端的自动化流程，今天主要分享利用jenkins对接gitlab，利用docker容器技术，实现前端项目的测试构建发布流程。</p>\\n","autoDesc":true}');export{e as data};
