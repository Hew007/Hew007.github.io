import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as r,a as i,b as n,d as e,e as s,f as o}from"./app-103a0f43.js";const d={},p=n("h2",{id:"背景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),e(" 背景")],-1),u=n("p",null,"通常在进行客户端数据分析和诊断时，我们需要将用户在客户端的浏览等记录，在一个合适的时机发送到服务端进行分析。这个时机显然是非常重要的，如果过早发送数据，那必然会导致某些数据无法收集到，比如用户的停留时长、页面关闭时间等等。所以，在当前页面卸载unload之前，将收集到的数据发送出去，就显得很必要了。",-1),h=o(`<p>为了解决上述所说的问题，通常需要在页面卸载（ <code>beforunload/unload</code>时间)之前，使用同步的<code>XHR(XMLHttpRequest)</code>请求数据，但是，这会导致页面卸载的时间大大增加，且强依赖于接口请求时间，对用户的体验十分不友好。另外，也可以通过Image Beacon图片信标方式进行数据上报，其原理是创建一个图片元素，然后设置它的 src 属性，此时绝大多数浏览器会延迟卸载以保证这个图片的载入，但是，这也避免不了页面卸载时间的增加，从而增加跳转到下一个页面的时间。</p><p>此时，就需要一个api来解决以上问题，即可以保证数据可靠的被传输到服务端，且不阻塞页面的卸载。<code>navigator.sendBeacon</code>便横空出世。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p><code>navigator.sendBeacon()</code> 方法可通过HTTP将少量数据（ ~65536个字符）使用post方式异步传输到Web服务器，满足了统计和诊断代码的需要。</p><ul><li><p>保证数据可靠传输</p><p>其底层是基于Fetch Api封装，浏览器会为其创建一个基于Fetch的keepalive标志，来保证无论是否关闭页面，浏览器都会保证其最终的完成。</p></li><li><p>极低性能影响，异步低优先级执行</p><p>当文档可视状态为隐藏时，浏览器会安排所有<code>sendBeacon</code>请求的立即传输，且会允许所有此类请求运行直到完成，而不阻塞其他紧迫和高优先级的任务。浏览器对其进行任务调度，以最大限度地减少资源(CPU和网络)与其他迫和高优先级任务的争用</p></li><li><p>不受跨域限制</p><p>和请求<code>js</code>、<code>image</code>等资源类似，<code>sendBeacon</code>请求不受跨域限制</p></li></ul><h2 id="语法syntax" tabindex="-1"><a class="header-anchor" href="#语法syntax" aria-hidden="true">#</a> 语法syntax</h2><blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>partial <span class="token keyword">interface</span> <span class="token class-name">Navigator</span> <span class="token punctuation">{</span>
 boolean <span class="token function">sendBeacon</span><span class="token punctuation">(</span>USVString url<span class="token punctuation">,</span> optional BodyInit<span class="token operator">?</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,7),_=n("li",null,[n("p",null,[n("code",null,"url")]),n("p",null,[n("code",null,"url"),e(" 参数表明 "),n("code",null,"data"),e(" 将要被发送到的网络地址。")])],-1),k=n("p",null,[n("code",null,"data")],-1),m=n("code",null,"data",-1),v={href:"https://fetch.spec.whatwg.org/#bodyinit",target:"_blank",rel:"noopener noreferrer"},b={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBufferView",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"ArrayBufferView",-1),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"Blob",-1),x={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/DOMString",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"DOMString",-1),I={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"FormData",-1),w=n("li",null,[n("p",null,"return 返回值"),n("p",null,[e("当浏览器成功把数据加入传输队列时，"),n("code",null,"sendBeacon()"),e(" 方法将会返回 true，否则返回 false。即执行成功为true，否则为false。")])],-1),z=o(`<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 数据的上报</span>
<span class="token comment">// data为收集到的数据</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>sendBeacon<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> status <span class="token operator">=</span> navigator<span class="token punctuation">.</span><span class="token function">sendBeacon</span><span class="token punctuation">(</span><span class="token string">&#39;domain.com/api/postData&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里使用向下兼容的方式进行数据传输上报</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于<code>sendBeacon</code>方法不接受回调函数，所以，我们没有办法去做出成功后的处理。但是，我们可以根据其返回值去做下一步处理，当其返回值为true，我们便可以认为其成功了。其实，<code>sendBeacon</code>本身设计时，就是用来上报诊断等数据，类似于图片打点上报方式，不需要什么特殊的返回值。</p><blockquote><p>注意：sendBeacon传输不止有传输长度的限制（Chrome40-86约65536个字符），数据大小的限制64kb，这些都是浏览器层面的限制，不同的浏览器可能还存在细微的差别。</p></blockquote><h2 id="兼容性" tabindex="-1"><a class="header-anchor" href="#兼容性" aria-hidden="true">#</a> 兼容性</h2>`,5),A={href:"https://caniuse.com/?search=sendBeacon",target:"_blank",rel:"noopener noreferrer"},C=n("figure",null,[n("img",{src:"http://qncdn.yunishare.cn/image-20201202134641377.png@water",alt:"image-20201202134641377",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20201202134641377")],-1),P=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),e(" 参考资料：")],-1),j={href:"https://w3c.github.io/beacon/#sendbeacon-method",target:"_blank",rel:"noopener noreferrer"},V={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon",target:"_blank",rel:"noopener noreferrer"},W={href:"https://juejin.cn/post/6844904094226710535",target:"_blank",rel:"noopener noreferrer"},q={href:"https://stackoverflow.com/questions/28989640/navigator-sendbeacon-data-size-limits",target:"_blank",rel:"noopener noreferrer"};function D(S,E){const a=c("ExternalLinkIcon");return l(),r("div",null,[p,u,i(" more "),h,n("ul",null,[_,n("li",null,[k,n("p",null,[m,e(" 参数是将要发送的 "),n("a",v,[e("BodyInit"),s(a)]),e("类型的数据，比如： "),n("a",b,[g,s(a)]),e(" 或 "),n("a",f,[B,s(a)]),e(", "),n("a",x,[y,s(a)]),e(" 或者 "),n("a",I,[N,s(a)]),e(" 等。")])]),w]),z,n("p",null,[e("Beacon API已支持除IE之外的绝大多数PC和手机浏览器，包括国产UC、QQ、baidu等浏览器，可以放心使用，兼容性可以参考"),n("a",A,[e("Can I Use"),s(a)]),e("关于此API列表。")]),C,P,n("ol",null,[n("li",null,[n("a",j,[e("W3c Beacon "),s(a)])]),n("li",null,[n("a",V,[e("Navigator.sendBeacon() - Web API 接口参考 | MDN"),s(a)])]),n("li",null,[n("a",W,[e("关于 navigator.sendBeacon 接口"),s(a)])]),n("li",null,[n("a",q,[e("Navigator.sendBeacon() data size limits"),s(a)])])])])}const U=t(d,[["render",D],["__file","navigator-sendBeacon-api.html.vue"]]);export{U as default};
